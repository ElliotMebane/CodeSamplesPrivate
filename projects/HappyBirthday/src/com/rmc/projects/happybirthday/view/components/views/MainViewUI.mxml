<?xml version="1.0" encoding="utf-8"?>
<views:AbstractView
	xmlns:views="com.rmc.projects.happybirthday.view.components.views.*" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:components="com.rmc.projects.happybirthday.view.components.*" 
	xmlns:ads="com.rmc.projects.happybirthday.view.components.ads.*"
	
	
	title="{phrasesVO.mainViewTitle_str}"
	creationComplete="_onCreationComplete(event)"
	
	viewActivate="onViewActivate(event)"
	viewDeactivate="onViewDeactivate(event)" xmlns:components1="com.rmc.projects.nativeadscontainer.components.*" xmlns:local="*" 
	
	>
	
	<fx:Script>
		<![CDATA[
			import com.hdi.nativeExtensions.NativeAds;
			import com.hdi.nativeExtensions.NativeAdsEvent;
			
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			
			import org.osflash.signals.natives.NativeSignal;
			
			import spark.events.TextOperationEvent;
			import spark.events.ViewNavigatorEvent;
			
			//--------------------------------------
			//  Properties
			//--------------------------------------
			//PUBLIC GETTER/SETTERS
			
			//PUBLIC
			/**
			 * Signal: When 'Spinner' Change
			 * 
			 */
			public var languageSpinnerListChangeSignal : NativeSignal;
			
			/**
			 * Signal: When 'Load' is Clicked
			 * 
			 */
			public var loadButtonClickSignal : NativeSignal;
			
			/**
			 * Signal: When 'Name:' textinput is changed
			 * 
			 */
			public var guestNameTextInputChange : NativeSignal;
			
			/**
			 * Signal: When 'Gender:' radio is changed
			 * 
			 */
			public var guestGenderRadioButtonChange : NativeSignal;

			
			//PUBLIC CONST
			
			
			//PRIVATE
			
			// --------------------------------------
			// Methods
			// --------------------------------------
			// PUBLIC
			
			// PRIVATE
			
			// --------------------------------------
			// Event Handlers
			// --------------------------------------
			
			/**
			 * Handles the aEvent: <code>FlexEvent.CREATION_COMPLETE</code>.
			 * 
			 * @param aEvent <code>FlexEvent</code> The incoming aEvent payload.
			 *  
			 * @return void
			 * 
			 */
			private function _onCreationComplete(aEvent : FlexEvent) : void
			{
				languageSpinnerListChangeSignal  	= new NativeSignal	(languageFullList_spinnerlist, 		IndexChangedEvent.CHANGE, 	IndexChangedEvent);	
				loadButtonClickSignal  				= new NativeSignal	(loadMessage_button, 				MouseEvent.CLICK, 			MouseEvent);	
				guestNameTextInputChange  			= new NativeSignal	(guestName_textinput, 				TextOperationEvent.CHANGE, 	TextOperationEvent);	
				guestGenderRadioButtonChange  		= new NativeSignal	(guestGender_radiobuttongroup, 		Event.CHANGE, 				Event);	
				guestGenderRadioButtonChange  		= new NativeSignal	(guestGender_radiobuttongroup, 		Event.CHANGE, 				Event);	
				
			}
			
			override protected function _onInitialize(aEvent:FlexEvent):void
			{
				super._onInitialize(aEvent);
				
				//HACK
				//MainViewUI and SongViewUI are children of AbstractViewUI. THe abstract declares buttons which I'm unsure how to declare
				//ONLY in the SongViewUI so I do it in the abstract and then make them invisible here.
				//No problems, works fine as is.
				back_button.visible = false;
				back_button.width = 0;
				share_button.visible = false;
				share_button.width = 0;
				
				
				webView_button.visible = false;
				webView_button.width = 0;
				
				//
				socialButtonClicked = new NativeSignal (socialButtons_hgroup, MouseEvent.CLICK, MouseEvent);
				
			}
			
			
			protected function onViewActivate(event:ViewNavigatorEvent):void
			{
				NativeAds.dispatcher.addEventListener(NativeAdsEvent.AD_RECEIVED,onAdReceived);
				NativeAds.showAd(0, 900 - 75,480,75);
			}
			
			protected function onViewDeactivate(event:ViewNavigatorEvent):void
			{
				//hide ads
				NativeAds.hideAd();
			}
			
			protected function onAdReceived(event:Event):void
			{
				//Anything behind the ad will be hidden, update your layout to handle this edge case.
				trace("update ui's size and position");
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:RadioButtonGroup id="guestGender_radiobuttongroup" />
	</fx:Declarations>
	
	<!-- Layout -->
	
	<!-- Place any UI components here. -->	
	<s:Group width="100%" height="100%" >
		<s:layout>
			<s:VerticalLayout
				paddingBottom="10"
				paddingLeft="10"
				paddingRight="10"
				paddingTop="10"
				/>
		</s:layout>
		
		<s:BorderContainer width="100%" height="100%"
						   backgroundAlpha="0"
						   >
			<s:layout>
				<s:VerticalLayout
					paddingBottom="0"
					paddingLeft="0"
					paddingRight="0"
					paddingTop="0"
					/>
			</s:layout>
			
			<s:SpinnerListContainer width="100%" height="100%"
									>
				<s:SpinnerList id="languageFullList_spinnerlist" 
							   width="100%" 
							   height="100%"
							   
							   labelField="title"
							   itemRenderer="com.rmc.projects.happybirthday.itemrenderers.FlagItemIconRenderer"
							   />
			</s:SpinnerListContainer>
			<s:HGroup width="100%" verticalAlign="top" paddingTop="20" paddingBottom="10" gap="20" >
				<s:CalloutButton 
					id="settings_calloutbutton" 
					width="{settings_calloutbutton.height}" 
					icon="@Embed('../assets_compiletime/fla/HappyBirthday_Assets_v1.swf#SettingsIcon')"
					>
					<s:calloutContent>
						<s:VGroup width="100%" height="100%" 
								  paddingBottom="20"
								  paddingLeft="20"
								  paddingRight="20"
								  paddingTop="20"
								  >
							
							<s:HGroup width="100%" verticalAlign="middle">
								<s:Label width="150" text = "{phrasesVO.guestNameLabel_str}" styleName="guestCalloutLabel"/>
								<s:TextInput id="guestName_textinput" width="100%" />
							</s:HGroup> 
							<s:Spacer height="5" />
							<s:HGroup width="100%" verticalAlign="middle">
								<s:Label width="150" text = "{phrasesVO.guestGenderLabel_str}" styleName="guestCalloutLabel"/>
								<s:RadioButton id="guestGenderMale_radiobutton"   group="{guestGender_radiobuttongroup}"  label = "{phrasesVO.guestGenderMaleRadioButtonLabel_str}" width="180"/>
								<s:RadioButton id="guestGenderFemale_radiobutton" group="{guestGender_radiobuttongroup}" selected="{!guestGenderMale_radiobutton.selected}" label = "{phrasesVO.guestGenderFemaleRadioButtonLabel_str}" />
							</s:HGroup>
						</s:VGroup>
						
					</s:calloutContent>
				</s:CalloutButton>
				<s:Button 	id = "loadMessage_button" width="100%" label = "{phrasesVO.loadMessageButtonLabel_str}"  />
			</s:HGroup>
			
		</s:BorderContainer>
	</s:Group>
	
	<!-- 
	
	Dynamically Insert iAD/adMob Advertisement Within an Existing Layout. 
	The 'live' sizing is fed to the API at startup, and again upon rotation, resizing, etc..
	
	1) unitID = "{insert_your_admob_code_here}" or externally as unitID = "{Passwords.AD_MOB_ID}" 
	
	2) Change all sizing parameters to meet you needs
	
	-->	
	<local:NativeAdsContainerIPadBottom />
	
</views:AbstractView>