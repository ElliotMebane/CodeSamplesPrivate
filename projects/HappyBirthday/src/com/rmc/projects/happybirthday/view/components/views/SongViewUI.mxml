<?xml version="1.0" encoding="utf-8"?>
<views:AbstractView
	xmlns:views="com.rmc.projects.happybirthday.view.components.views.*" 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	
	creationComplete="_onCreationComplete(event)" 
	xmlns:components="com.rmc.projects.happybirthday.view.components.*"
	xmlns:ads="com.rmc.projects.happybirthday.view.components.ads.*" 
	xmlns:components1="com.rmc.projects.nativeadscontainer.components.*" 
	xmlns:local="*"

	>
	
	<fx:Script>
		<![CDATA[
			
			/**
			 * Copyright (C) 2005-2012 by Rivello Multimedia Consulting (RMC).                    
			 * code [at] RivelloMultimediaConsulting [dot] com                                                  
			 *                                                                      
			 * Permission is hereby granted, free of charge, to any person obtaining
			 * a copy of this software and associated documentation files (the      
			 * "Software"), to deal in the Software without restriction, including  
			 * without limitation the rights to use, copy, modify, merge, publish,  
			 * distribute, sublicense, and#or sell copies of the Software, and to   
			 * permit persons to whom the Software is furnished to do so, subject to
			 * the following conditions:                                            
			 *                                                                      
			 * The above copyright notice and this permission notice shall be       
			 * included in all copies or substantial portions of the Software.      
			 *                                                                      
			 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,      
			 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF   
			 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
			 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR    
			 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
			 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
			 * OTHER DEALINGS IN THE SOFTWARE.                                      
			 */
			
			//--------------------------------------
			//  Imports
			//--------------------------------------
			import mx.events.FlexEvent;
			
			import org.osflash.signals.natives.NativeSignal;
			
			//--------------------------------------
			//  Properties
			//--------------------------------------
			//PUBLIC GETTER/SETTERS
			
			//PUBLIC
			/**
			 * Signal: When 'Clear' is Clicked
			 * 
			 */
			public var backButtonClick : NativeSignal;
			
			/**
			 * Signal: When 'WebView' is Clicked
			 * 
			 */
			public var webViewButtonClick : NativeSignal;
			
			
			//PUBLIC CONST
			
			
			//PRIVATE
			
			// --------------------------------------
			// Methods
			// --------------------------------------
			// PUBLIC
			
			// PRIVATE
			
			// --------------------------------------
			// Event Handlers
			// --------------------------------------
			/**
			 * Handles the aEvent: <code>FlexEvent.CREATION_COMPLETE</code>.
			 * 
			 * @param aEvent <code>FlexEvent</code> The incoming aEvent payload.
			 *  
			 * @return void
			 * 
			 */
			private function _onCreationComplete(aEvent : FlexEvent) : void
			{
				backButtonClick 	= new NativeSignal 	(back_button, 		MouseEvent.CLICK, MouseEvent);
				webViewButtonClick 	= new NativeSignal 	(webView_button, 	MouseEvent.CLICK, MouseEvent);
				
			}
			
			override protected function _onInitialize(aEvent:FlexEvent):void
			{
				super._onInitialize(aEvent);
				
				//HACK
				//MainViewUI and SongViewUI are children of AbstractViewUI. THe abstract declares buttons which I'm unsure how to declare
				//ONLY in the MainViewUI so I do it in the abstract and then make them invisible here.
				//No problems, works fine as is.
				information_button.visible = false;
				information_button.width = 0;
				//
				webView_button.visible = true;
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<!-- Place any UI components here. -->	
	<s:Group width="100%" height="100%" >
		<s:layout>
			<s:VerticalLayout
				paddingBottom="10"
				paddingLeft="10"
				paddingRight="10"
				paddingTop="10"
				/>
		</s:layout>
		
		<s:BorderContainer width="100%" height="100%">
			<s:layout>
				<s:VerticalLayout
					paddingBottom="0"
					paddingLeft="0"
					paddingRight="0"
					paddingTop="0"
					/>
			</s:layout>
			
			<s:TextArea id = "textarea" 					
						width="100%" height="100%" 
						editable="false" 
						selectable="true" 
						horizontalScrollPolicy="off" verticalScrollPolicy="on"
						skinClass="spark.skins.mobile.TextAreaSkin"
						/>
		</s:BorderContainer>
	</s:Group>
	<!-- 
	-->	
	
	<!-- 
	
	Dynamically Insert iAD/adMob Advertisement Within an Existing Layout. 
	The 'live' sizing is fed to the API at startup, and again upon rotation, resizing, etc..
	
	1) unitID = "{insert_your_admob_code_here}" or externally as unitID = "{Passwords.AD_MOB_ID}" 
	
	2) Change all sizing parameters to meet you needs
	
	-->	
	<local:NativeAdsContainerIPadBottom />
	
</views:AbstractView>
