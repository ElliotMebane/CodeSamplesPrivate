<?xml version="1.0" encoding="utf-8"?>
<s:View 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	
	destructionPolicy="auto"
	>
	
	<fx:Script>
		<![CDATA[
			import com.rmc.projects.happybirthday.model.events.PhrasesModelEvent;
			import com.rmc.projects.happybirthday.model.vo.PhrasesVO;
			
			import mx.events.FlexEvent;
			
			import org.osflash.signals.natives.NativeSignal;
			
			//--------------------------------------
			//  Properties
			//--------------------------------------
			//PUBLIC GETTER/SETTERS
			/**
			 * Stores all the translation info. Nice and bindable
			 * 
			 */
			[Bindable]
			public function get phrasesVO() 						: PhrasesVO	 		{ return _phrasesVO; }
			public function set phrasesVO(aValue : PhrasesVO) 		: void 			{ _phrasesVO = aValue; }
			private var _phrasesVO : PhrasesVO;
			
			
			//PUBLIC
			
			//PUBLIC CONST
			
			
			//PRIVATE
			
			// --------------------------------------
			// Methods
			// --------------------------------------
			// PUBLIC
			
			// PRIVATE
			
			// --------------------------------------
			// Event Handlers
			// --------------------------------------
			/**
			 * Handles the Signal: <code>ChangedPhrasesModelSignal</code>.
			 * 
			 * @param aEvent <code>PhrasesModelEvent</code> The incoming aEvent payload.
			 *  
			 * @return void
			 * 
			 */
			protected function _onPhrasesModelChanged (aEvent : PhrasesModelEvent):void
			{
				
				var phrasesVO : PhrasesVO = aEvent.phrasesModel.phrasesVO;
				
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<!-- Layout -->
	
	<!-- Place any UI components here. -->	
	<s:layout>
		<s:VerticalLayout
			paddingTop		=	"10"
			paddingLeft		=	"10"
			paddingRight	=	"10"
			paddingBottom	=	"10"
			/>
	</s:layout>
		
	<s:actionContent>
		<s:Button id = "back_button" styleName="backButton" label = "{phrasesVO.backButtonLabel_str}"/>
	</s:actionContent>
	
</s:View>
